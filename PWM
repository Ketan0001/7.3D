import RPi.GPIO as GPIO
import time

#Ultra Sonic GPIO pin
trig_pin = 26
echo_pin = 20

GPIO.setmode(GPIO.BCM)
GPIO.setup(21, GPIO.OUT)
GPIO.setup(trig_pin,GPIO.OUT)
GPIO.setup(echo_pin,GPIO.OUT)



# Creating A led named instance which will initialize PWM with the GPIO pin 21 and Frequency 500hz
led = GPIO.PWM(21,500)

# starting the PWM with 0
led.start(0)


#creating a function which will help in getting distance from the Sensor
def getting_distnace():
	#Sending a pulse to the ultrasonic sensor for triggering a measurement
    GPIO.output(trig_pin, True)
    # Wait for a short time
    time.sleep(0.00001)
    GPIO.output(trig_pin, False)

    # Recording the time when the ultrasonic sensor sends the pulse
    pulse_start = time.time()
    pulse_end = time.time()
    
    # Measuring the time it takes for the ultrasonic sensor to receive the pulse back
    while GPIO.input(echo_pin) == 0:
        pulse_start = time.time()
   
    while GPIO.input(echo_pin) == 1:
        pulse_end = time.time()
 # Calculate the duration of the pulse, which corresponds to the distance
    pulse_duration = pulse_end - pulse_start
    distance = pulse_duration * 17150  # Speed of sound in cm/s

    return distance

while (1):
	distance = getting_distnace()
	# Map the distance to LED brightness (0% to 100%)
	brightness = max(0, min(100, int(100 - (distance / 10))))
	
	led.ChangeDutyCycle(brightness)
	time.sleep(0.1)
